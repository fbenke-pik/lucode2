% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildLibrary.R
\name{buildLibrary}
\alias{buildLibrary}
\title{buildLibrary}
\usage{
buildLibrary(
  lib = ".",
  cran = TRUE,
  updateType = NULL,
  checkForUpdates = TRUE,
  autoCheckRepoUpToDate = TRUE
)
}
\arguments{
\item{lib}{Path to the package}

\item{cran}{If cran-like test is needed}

\item{updateType}{Either an integer or character string:\tabular{lll}{
   \strong{number} \tab \strong{string} \tab \strong{description} \cr
   1 \tab \code{major} \tab for major rewrite of the whole package \cr
   2 (default) \tab \code{minor} \tab for new features or improvements \cr
   3 \tab \code{patch} \tab for bugfixes and corrections \cr
   4 \tab \code{development} \tab only for packages in development stage \cr
   0 \tab \code{none} \tab version has already been incremented \cr
}}

\item{checkForUpdates}{Check for lucode2 updates (default TRUE). Set FALSE in case of problems with the new version.}

\item{autoCheckRepoUpToDate}{Automatically check if your repository is up to date. If FALSE the user is simply asked.}
}
\description{
Builds R libraries. Includes checks for consistency.
}
\details{
This function is designed to help building R libraries. It performs the
following steps: \itemize{
\item Version: Determination of a new version number (Can also be defined by the user).
\item Date: Determination of a the date of the build (Can also be defined by the user).
\item Linter: Check for code style problems.
\item R check: Check whether the library is consistent and can be built.
\item Package building: Builds the .zip and .tar.gz packages under windows.
Under linux, only the .tar.gz package is built. }
The commit still has to be performed by the user.
}
\note{
The behavior of buildLibrary can be configured via the \code{.buildLibrary} file in the
main folder of the package. It uses YAML format and can contain the following entries:
\itemize{
\item \strong{ValidationKey}: This entry always exists and is written automatically by \code{buildLibrary}
It confirms that the package has been successfully build via the function.
\item \strong{AutocreateReadme} (optional): yes/no - decides whether \code{buildLibrary} automatically updates
the README.md file or not (default: yes)
\item \strong{AddInReadme} (optional): Additional entries to be added to the autocreated README. Provided either
in markdown format or as paths to RMarkdown (Rmd) or Markdown (md) files
\item \strong{AcceptedWarnings} (optional): a list of Warnings which should be ignored by \code{buildLibrary}
(autocompletion via asterisks allowed)
\item \strong{AcceptedNotes} (optional): a list of Notes which should be ignored by \code{buildLibrary}
(autocompletion via asterisks allowed)
\item \strong{allowLinterWarnings}: yes/no - If set to "no" linter warnings will stop the build process.
(default: yes)
}
}
\examples{
\dontrun{
buildLibrary()
}
}
\seealso{
\code{\link{package2readme}}, \code{\link{lint}}, \code{\link{autoFormat}}
}
\author{
Jan Philipp Dietrich, Anastasis Giannousakis, Markus Bonsch, Pascal FÃ¼hrlich
}
